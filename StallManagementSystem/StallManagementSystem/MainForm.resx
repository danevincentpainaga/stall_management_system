<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoutBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vd9TH/4C5hkRsH48lDIAAAAASUVORK5CYII=
</value>
  </data>
</root>